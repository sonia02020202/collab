@using TravelFoodCms.Models.ViewModels;

@model OrderViewModel

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h2>Order #@Model.OrderId Details</h2>
                    <div>
                        <a asp-action="Edit" asp-route-id="@Model.OrderId" class="btn btn-sm btn-light mr-2">
                            <i class="fas fa-edit mr-1"></i>Edit
                        </a>
                        <a asp-action="Index" class="btn btn-sm btn-light">
                            <i class="fas fa-arrow-left mr-1"></i>Back to List
                        </a>
                    </div>
                </div>

                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <h4>Order Information</h4>
                            <hr>
                            <dl class="row">
                                <dt class="col-sm-4">Restaurant</dt>
                                <dd class="col-sm-8">@Model.RestaurantName</dd>

                                <dt class="col-sm-4">User</dt>
                                <dd class="col-sm-8">@Model.UserName</dd>

                                <dt class="col-sm-4">Order Date</dt>
                                <dd class="col-sm-8">@Model.OrderDate.ToString("dd MMMM yyyy HH:mm")</dd>

                                <dt class="col-sm-4">Status</dt>
                                <dd class="col-sm-8">
                                    <span class="badge badge-@(GetStatusBadgeClass(Model.Status))">
                                        @Model.Status
                                    </span>
                                </dd>

                                <dt class="col-sm-4">Special Requests</dt>
                                <dd class="col-sm-8">
                                    @(string.IsNullOrWhiteSpace(Model.SpecialRequests) ? "None" : Model.SpecialRequests)
                                </dd>
                            </dl>
                        </div>

                        <div class="col-md-6">
                            <h4>Financial Details</h4>
                            <hr>
                            <dl class="row">
                                <dt class="col-sm-4">Total Amount</dt>
                                <dd class="col-sm-8">@Model.TotalAmount.ToString("C")</dd>
                            </dl>
                        </div>
                    </div>
                </div>

                <div class="card-footer">
                    <h4>Order Items</h4>
                    @if (Model.OrderItems == null || !Model.OrderItems.Any())
                    {
                        <p class="text-muted">No items in this order.</p>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Item Name</th>
                                        <th>Quantity</th>
                                        <th>Unit Price</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderItems)
                                    {
                                        <tr>
                                            <td>@item.ItemName</td>
                                            <td>@item.Quantity</td>
                                            <td>@item.UnitPrice.ToString("C")</td>
                                            <td>@(item.Quantity * item.UnitPrice)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "completed" => "success",
            "pending" => "warning",
            "cancelled" => "danger",
            _ => "secondary"
        };
    }
}
